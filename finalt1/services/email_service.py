# services/email_service.py
import os
from flask import current_app
from flask_mail import Mail, Message
from dotenv import load_dotenv

load_dotenv()

def init_mail(app):
    """Initialize Flask-Mail with the app."""
    app.config['MAIL_SERVER'] = os.getenv('MAIL_SERVER', 'smtp.gmail.com')
    app.config['MAIL_PORT'] = int(os.getenv('MAIL_PORT', '587'))
    app.config['MAIL_USE_TLS'] = os.getenv('MAIL_USE_TLS', 'true').lower() == 'true'
    app.config['MAIL_USE_SSL'] = os.getenv('MAIL_USE_SSL', 'false').lower() == 'true'
    app.config['MAIL_USERNAME'] = os.getenv('MAIL_USERNAME')
    app.config['MAIL_PASSWORD'] = os.getenv('MAIL_PASSWORD')
    app.config['MAIL_DEFAULT_SENDER'] = os.getenv('MAIL_DEFAULT_SENDER', os.getenv('MAIL_USERNAME'))
    
    # Check if email configuration is properly set
    if not app.config['MAIL_USERNAME'] or app.config['MAIL_USERNAME'] == 'your_email@gmail.com':
        print("‚ö†Ô∏è WARNING: Email configuration not set up. Please configure your email credentials in .env file")
        app.config['MAIL_ENABLED'] = False
    else:
        app.config['MAIL_ENABLED'] = True
        print(f"üìß Email service initialized with: {app.config['MAIL_USERNAME']}")
    
    mail = Mail(app)
    return mail

def send_shortlist_email(mail, candidate_email, candidate_name, job_title, company_name):
    """Send a shortlisted notification email to a candidate."""
    try:
        # Check if email is enabled
        if not current_app.config.get('MAIL_ENABLED', False):
            return {
                "success": False, 
                "message": "Email service not configured. Please set up email credentials in .env file."
            }
        subject = f"üéâ Congratulations! You've been shortlisted for {job_title} at {company_name}"
        
        body = f"""
Dear {candidate_name},

üéâ CONGRATULATIONS! üéâ

We are thrilled to inform you that your resume has achieved a relevance score of 65% or higher in our Automated Resume Relevance Check System for the position of {job_title} at {company_name}.

Your qualifications, skills, and experience have been evaluated using our AI-powered system, and you have successfully met our shortlisting criteria. This places you among the top candidates for this role.

WHAT HAPPENS NEXT:
‚Ä¢ Our placement team will contact you within the next 2-3 business days
‚Ä¢ You will receive detailed information about the interview process
‚Ä¢ Further assessment rounds (if applicable) will be communicated

We were particularly impressed with your profile and believe you would be a great fit for our team.

Thank you for your interest in joining {company_name}. We look forward to the next steps in the recruitment process.

Best regards,
Placement Team
{company_name}

---
This email was generated by our Automated Resume Relevance Check System.
"""

        html_body = f"""
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <style>
        body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; }}
        .container {{ max-width: 600px; margin: 0 auto; padding: 20px; }}
        .header {{ background: linear-gradient(135deg, #7f5af0, #ff5470); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }}
        .content {{ background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; }}
        .footer {{ text-align: center; margin-top: 20px; color: #666; font-size: 12px; }}
        .btn {{ display: inline-block; background: #7f5af0; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; margin: 10px 0; }}
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üéâ Congratulations!</h1>
            <h2>You've been shortlisted!</h2>
        </div>
        <div class="content">
            <p>Dear <strong>{candidate_name}</strong>,</p>
            
            <p>We are pleased to inform you that you have been <strong>shortlisted</strong> for the position of <strong>{job_title}</strong> at <strong>{company_name}</strong>.</p>
            
            <p>Your application has been reviewed and we were impressed with your qualifications and experience. We would like to move forward with the next stage of our recruitment process.</p>
            
            <p>Our team will be in touch with you shortly with further details about the next steps.</p>
            
            <p>Thank you for your interest in joining our team.</p>
            
            <p>Best regards,<br>
            <strong>{company_name} Recruitment Team</strong></p>
        </div>
        <div class="footer">
            <p>This email was sent automatically by ResumeMatch AI recruitment system.</p>
        </div>
    </div>
</body>
</html>
"""

        msg = Message(
            subject=subject,
            recipients=[candidate_email],
            body=body,
            html=html_body
        )
        
        mail.send(msg)
        return {"success": True, "message": f"Email sent successfully to {candidate_email}"}
        
    except Exception as e:
        current_app.logger.error(f"Failed to send email to {candidate_email}: {str(e)}")
        return {"success": False, "message": f"Failed to send email: {str(e)}"}

def send_bulk_shortlist_emails(mail, candidates_data):
    """Send shortlist emails to multiple candidates."""
    results = []
    
    for candidate_data in candidates_data:
        result = send_shortlist_email(
            mail=mail,
            candidate_email=candidate_data['email'],
            candidate_name=candidate_data['name'],
            job_title=candidate_data['job_title'],
            company_name=candidate_data['company_name']
        )
        results.append({
            "candidate": candidate_data['name'],
            "email": candidate_data['email'],
            "status": result
        })
    
    return results